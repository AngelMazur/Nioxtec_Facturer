---
description: Git, CI y Docker
globs: ["**/.github/workflows/**","**/Dockerfile","**/docker-compose.yml","**/package.json","**/requirements*.txt"]
alwaysApply: false
---

- **Git**: ramas `feature/*` desde `main`; PR con descripci칩n, pruebas locales y changelog breve.
- **Husky + lint-staged**: mantener y ampliar (ESLint/Prettier). Para Python, a침ade Black y/o Ruff.
- **CI (GitHub Actions)**: jobs de `lint`, `test` y build de Docker (multi-stage, usuario no root).
- Im치genes: **multi-stage**, `pip install --no-cache-dir`, healthcheck en compose.
- `.env.example` y `.env.dev`/`.env.prod` separados; nunca subir `.env*`.
- Escaneo de secretos (a침adir **gitleaks**) y dependencias (npm/audit, pip-audit).
