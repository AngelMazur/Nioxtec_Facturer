---
description: Backend Flask (SQLite/PostgreSQL por env)
globs: ["**/*.py","**/Dockerfile","**/docker-compose.yml"]
alwaysApply: false
---

- Estructura por **Blueprints**; separa `routes/`, `services/`, `models/`, `schemas/`.
- **Config por entorno**: todo desde `os.environ` con defaults seguros. Rechazar arranque en prod si falta `JWT_SECRET_KEY`; permitir default controlado solo en dev.
- DB: al añadir columnas/cambios, propone **Alembic**. Si no, crea script idempotente en `migrations/` y documéntalo.
- Validación de entrada: usa funciones dedicadas o pydantic en la capa de servicio (sin acoplar a Flask).
- **Errores**: `@app.errorhandler` para 400/401/403/404/422/500 con JSON consistente `{error, code}`.
- **Paginación/orden**: `?page=&page_size=&sort=&order=` por defecto.
- **CORS**: respeta orígenes de `.env`; no uses `*` en producción.
- **JWT**: expiración razonable, refresh si aplica. No mezclar datos sensibles en el token.
- **Logs** estructurados (nivel por ENV), captura trazas en errores 5xx.
