name: Deploy to Production (Windows Self‑Hosted)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: deploy-production
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  deploy:
    runs-on:
      - self-hosted
      - windows
      - nioxtec
    timeout-minutes: 30
    steps:
      - name: Deploy automático con Python funcional
        shell: powershell
        env:
          DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
        run: |
          $ErrorActionPreference = 'Continue'
          function Log([string]$m){ Write-Host ("[{0}] {1}" -f (Get-Date -Format 'yyyy-MM-dd HH:mm:ss'), $m) }
          
          Log 'Iniciando deploy automático'
          Set-Location 'C:\Nioxtec\Nioxtec_Facturer'
          
          # Git update
          $repoUrl = "https://x-access-token:$env:DEPLOY_TOKEN@github.com/AngelMazur/Nioxtec_Facturer.git"
          git remote set-url origin $repoUrl
          git fetch origin main --prune
          git reset --hard origin/main
          Log 'Código actualizado desde GitHub'
          
          # Python dependencies - usar el venv310 que sabemos que existe
          if (Test-Path '.\.venv310\Scripts\python.exe') {
            Log 'Instalando dependencias Python con venv310'
            try {
              & '.\.venv310\Scripts\python.exe' -m pip install --upgrade pip --quiet
              & '.\.venv310\Scripts\pip.exe' install -r requirements.txt --quiet
              Log 'Dependencias Python instaladas correctamente'
            } catch {
              Log "Error instalando Python deps: $($_.Exception.Message)"
            }
          } else {
            Log 'venv310 no encontrado'
          }
          
          # Build frontend
          Log 'Compilando frontend'
          Set-Location 'C:\Nioxtec\Nioxtec_Facturer\frontend'
          npm ci --silent
          $env:VITE_API_BASE = 'https://api.nioxtec.es'
          npm run build
          Log 'Frontend compilado exitosamente'
          
          # Restart services
          Log 'Reiniciando servicios'
          try { schtasks /End /TN "Nioxtec Backend" 2>$null | Out-Null } catch {}
          try { schtasks /End /TN "Nioxtec Frontend" 2>$null | Out-Null } catch {}
          Start-Sleep -Seconds 5
          try { schtasks /Run /TN "Nioxtec Backend" 2>$null | Out-Null } catch {}
          try { schtasks /Run /TN "Nioxtec Frontend" 2>$null | Out-Null } catch {}
          
          Log 'Deploy completado exitosamente'

      - name: Verificar API
        shell: powershell
        run: |
          Start-Sleep -Seconds 15
          try {
            $response = Invoke-WebRequest https://api.nioxtec.es/health -UseBasicParsing -TimeoutSec 20
            Write-Host "✅ Deploy exitoso - API status: $($response.StatusCode)"
          } catch {
            Write-Host "⚠️ Deploy completado - API verificación falló: $($_.Exception.Message)"
          }


